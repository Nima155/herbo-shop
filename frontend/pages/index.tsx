import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { dehydrate, DehydratedState, QueryClient } from 'react-query'
import Layout from '../components/Layout'

import queries from '../lib/graphql'
import { authenticatedGraphQl, imageLoader } from '../lib/helpers'
import ProductCard from '../components/ProductCard'

const Home: NextPage<{ products: { products: { data: any } } }> = ({
	products,
}) => {
	// console.log(products.products.data)

	return (
		<div className="bg-slate-100 min-h-screen">
			<Head>
				<title>herbal medicine | Herboca</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Layout>
				<ul className="grid gap-6 grid-cols-responsive-cols min-w-full justify-items-center mt-4">
					{products.products.data.map(({ attributes }) => (
						<ProductCard key={attributes.name} productDetails={attributes} />
					))}
				</ul>
			</Layout>
		</div>
	)
}

export const getServerSideProps: GetServerSideProps = async (context) => {
	const gqlClient = authenticatedGraphQl(context.req.cookies)

	const queryClient = new QueryClient()
	const { USER_INFO, PRODUCTS } = queries

	// console.log(products.products.data[0].attributes.picture.data[0].attributes)
	const user_stats = queryClient.prefetchQuery('user_stats', async () => {
		const data_1 = gqlClient.request(USER_INFO)
		return data_1
	})

	const [products, _] = await Promise.all([
		gqlClient.request(PRODUCTS),
		user_stats,
	])

	return {
		props: {
			dehydratedState: dehydrate(queryClient),
			products,
		},
	}
}

export default Home
