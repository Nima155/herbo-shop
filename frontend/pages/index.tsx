import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { dehydrate, QueryClient } from 'react-query'
import Layout from '../components/Layout'
import Toast, { useToastStore } from '../components/ToastNotifications'
import queries from '../lib/graphql'
import { authenticatedGraphQl } from '../lib/helpers'
import ProductCard from '../components/ProductCard'
import { LayoutGroup, motion, AnimatePresence } from 'framer-motion'
import ReactDOM from 'react-dom'

const Home: NextPage<{ products: { products: { data: any } } }> = ({
	products,
}) => {
	// console.log(products.products.data)

	return (
		<>
			<Head>
				<title>herbal medicine | Herboca</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Layout>
				<NotificationContainer />
				<ul className="grid gap-6 grid-cols-responsive-cols min-w-full justify-center mt-4">
					{products.products.data.map(({ attributes, id }: any) => {
						// console.log(attributes)

						return (
							<ProductCard
								key={attributes.name}
								productDetails={{ id, ...attributes }}
							/>
						)
					})}
				</ul>
			</Layout>
		</>
	)
}

export const getServerSideProps: GetServerSideProps = async (context) => {
	const gqlClient = authenticatedGraphQl(context.req.cookies)

	const queryClient = new QueryClient()
	const { USER_INFO, PRODUCTS } = queries

	// console.log(products.products.data[0].attributes.picture.data[0].attributes)
	const user_stats = queryClient.prefetchQuery('user_stats', async () => {
		const data_1 = gqlClient.request(USER_INFO)
		return data_1
	})

	const [products, _] = await Promise.all([
		gqlClient.request(PRODUCTS),
		user_stats,
	])

	return {
		props: {
			dehydratedState: dehydrate(queryClient),
			products,
		},
	}
}

function NotificationContainer() {
	const { toasts } = useToastStore()
	return ReactDOM.createPortal(
		<LayoutGroup>
			<motion.ul className="fixed right-0 bottom-0 flex flex-col justify-end gap-2 p-8">
				<AnimatePresence initial={false}>
					{/* <LayoutGroup> */}
					{toasts.map((e) => (
						<Toast key={e.id} id={e.id} options={{ status: e.typ }}>
							<p>{e.message}</p>
						</Toast>
					))}
					{/* </LayoutGroup> */}
				</AnimatePresence>
			</motion.ul>
		</LayoutGroup>,
		document.getElementById('toastContainer')!
	)
}

export default Home
